DROP TABLE IF EXISTS friends;
DROP TABLE IF EXISTS likes;
DROP TABLE IF EXISTS film_genres;
DROP TABLE IF EXISTS films;
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS genres;
DROP TABLE IF EXISTS mpa;

CREATE TABLE IF NOT EXISTS mpa (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    mpa_name VARCHAR(100)
);

CREATE TABLE IF NOT EXISTS films (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    description VARCHAR(200) ,
    release_date DATE,
    duration INTEGER,
    mpa_id INTEGER REFERENCES mpa (id)
);

CREATE TABLE IF NOT EXISTS genres (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    genre_name VARCHAR(100)
);

CREATE TABLE IF NOT EXISTS film_genres (
    film_id INTEGER REFERENCES films (id),
    genre_id INTEGER REFERENCES genres (id),
    PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS users (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR(100),
    login VARCHAR(100),
    name VARCHAR(100),
    birthday DATE
);

CREATE TABLE IF NOT EXISTS likes (
    film_id INTEGER REFERENCES films (id),
    user_id INTEGER REFERENCES users (id),
    PRIMARY KEY (film_id, user_id)
);

CREATE TABLE IF NOT EXISTS friends (
    user_1_id INTEGER REFERENCES users (id),
    user_2_id INTEGER REFERENCES users (id),
    confirmed BOOLEAN,
    PRIMARY KEY (user_1_id, user_2_id),
    CHECK (user_1_id <> user_2_id)
);

INSERT INTO genres (genre_name)
VALUES ('Комедия'),
       ('Драма'),
       ('Мультфильм'),
       ('Триллер'),
       ('Документальный'),
       ('Боевик');

INSERT INTO mpa (mpa_name)
VALUES ('G'),
       ('PG'),
       ('PG-13'),
       ('R'),
       ('NC-17');
